name: 'Terraform Plan'

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - 'terraform-backend/**'
      - '.github/workflows/terraform-*.yml'
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Plan for destroy'
        required: false
        default: false
        type: boolean

env:
  TF_VERSION: '1.6.0'
  TF_IN_AUTOMATION: true

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    environment: 
      name: planning
      
    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      continue-on-error: true

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=superinsight-terraform-state-465636789521-oregon" \
          -backend-config="key=n8n/terraform.tfstate" \
          -backend-config="region=us-west-2" \
          -backend-config="dynamodb_table=superinsight-terraform-locks-oregon"

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: |
        terraform plan \
          -var="trustcloud_api_key=${{ secrets.TRUSTCLOUD_API_KEY }}" \
          -var="n8n_encryption_key=${{ secrets.N8N_ENCRYPTION_KEY }}" \
          ${{ github.event.inputs.destroy == 'true' && '-destroy' || '' }} \
          -out=tfplan

    - name: Post Plan to PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const { execSync } = require('child_process');
          
          // Get plan output
          const planOutput = execSync('cd terraform && terraform show -no-color tfplan', { encoding: 'utf-8' });
          
          const output = `
          ## üèóÔ∏è Terraform Plan Results
          
          ### Plan Summary
          \`\`\`
          ${planOutput.slice(0, 5000)}${planOutput.length > 5000 ? '\n... (truncated)' : ''}
          \`\`\`
          
          ### üí∞ Estimated Monthly Cost
          - **ECS Fargate**: ~$120-200 (2 tasks, 2vCPU, 4GB each)
          - **RDS PostgreSQL**: ~$60-90 (db.t3.medium)
          - **Application Load Balancer**: ~$20
          - **Storage & Monitoring**: ~$40-100
          - **Total Estimated**: ~$240-410/month
          
          ---
          *Generated by GitHub Actions*
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });

    - name: Security Scan with tfsec
      uses: aquasecurity/tfsec-action@v1.0.3
      with:
        working_directory: terraform
        soft_fail: true

    - name: Upload Plan Artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: terraform/tfplan
        retention-days: 30

    - name: Notification on Success
      if: success()
      run: |
        echo "‚úÖ Terraform plan completed successfully"
        if [ -n "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "embeds": [{
                "title": "‚úÖ Terraform Plan Successful",
                "description": "Infrastructure plan completed for PR #${{ github.event.number }}",
                "color": 3066993,
                "fields": [
                  {"name": "Repository", "value": "${{ github.repository }}", "inline": true},
                  {"name": "Branch", "value": "${{ github.head_ref }}", "inline": true},
                  {"name": "Actor", "value": "${{ github.actor }}", "inline": true}
                ]
              }]
            }' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
        fi

    - name: Notification on Failure
      if: failure()
      run: |
        echo "‚ùå Terraform plan failed"
        if [ -n "${{ secrets.DISCORD_WEBHOOK_URL }}" ]; then
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{
              "embeds": [{
                "title": "‚ùå Terraform Plan Failed",
                "description": "Infrastructure planning failed for PR #${{ github.event.number }}",
                "color": 15158332,
                "fields": [
                  {"name": "Repository", "value": "${{ github.repository }}", "inline": true},
                  {"name": "Branch", "value": "${{ github.head_ref }}", "inline": true},
                  {"name": "Actor", "value": "${{ github.actor }}", "inline": true}
                ]
              }]
            }' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
        fi